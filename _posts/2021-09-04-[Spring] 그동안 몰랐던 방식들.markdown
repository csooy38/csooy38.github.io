---
layout: post
title:  "[Spring] 알아두면 좋은 것들"
subtitle: 다양하게 기록해본다.
date:   2021-09-04 10:18:03 +0900
categories: jekyll update
tags: [spring, jsp, java, mybatis, javascript]
---

<br>

## 1. JSTL/EL 언어를 활용하여 절대경로 잡기

절대경로 = ContextPath + URL매핑주소(uri 주소)   
여기서 ContextPath Root는 언제든지 바뀔 수 있으므로 변수를 사용해서 선언한다.

```html
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="path" value="<%=request.getContextPath() %>" scope="application" />
```

scope="application" 을 지정하면 현재 페이지뿐만 아니라    
모든 페이지에서 path 변수를 사용할 수 있다.

```html
<form action="${path }/index">...</form>
```
위와 같이 활용한다.

---
참고 | [폼태그의-요청-경로설정절대경로-JSTL-문법과-EL표현식을-활용한...](https://u-it.tistory.com/entry/%ED%8F%BC%ED%83%9C%EA%B7%B8%EC%9D%98-%EC%9A%94%EC%B2%AD-%EA%B2%BD%EB%A1%9C%EC%84%A4%EC%A0%95%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-JSTL-%EB%AC%B8%EB%B2%95%EA%B3%BC-EL%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-ContextPath-Root%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-%EC%B0%B8%EC%A1%B0%EB%B2%95)

<br>



## 2. 방금 Insert한 row에서 컬럼값 호출하기

info 테이블에 row를 insert하고,  
service단에서 info_idx의 값을 호출해서 사용하고 싶다.  

```xml
<insert id="insertInfo">
	<selectKey keyProperty="info_idx" resultType="int">
		select nvl(max(info_idx)+1, 1) from info 
	</selectKey>
	insert into info 
	values
	(#{info_idx}, #{name}, #{regist}, #{gender}, #{army}, #{company}, #{depart}, #{position}, #{phone}, #{email}, #{addr}, #{profile}, sysdate)
</insert>
```
mybatis에서 insert 쿼리문을 작성하고


```java
cardDAO.insertInfo(infoDTO);
int info_idx = infoDTO.getInfo_idx();
```
dao나 service단에서 원하는 컬럼을 get한다.

selectKey 작성시 keyProperty를 컬럼명(변수명)과 동일하게 작성하면 자동으로 DTO에 등록된다.
따라서 바로 호출해서 사용할 수 있다. 

<br>

➕ 왜인지 호출시 실제값보다 +1 된 값이 get된다.  
원인&해결방법 찾아보기!  

---
참고 | [[Mybatis] 방금 Insert한 row를 select 하고 싶을 때 : selectKey](https://joo-dev.tistory.com/2)

<br>

## 3. 값이 null 인 input 태그만 제외하고 form 데이터 전송하기

```html
<form method="post" onsubmit="nullCheck();">
	<input class="sample" name="sample">
	<input type="submit" value="전송">
</form>
```
1) form 전송시 null 체크할 함수로 onsumit 설정

```javascript
function nullCheck() {	
	if($("sample").val() == "") {
		$("sample").attr("disabled", true);
	}
}
```
2) null 체크 함수 작성  
disabled 설정된 태그는 폼 전송에 포함되지 않는다.


---
참조 | [Form 태그 내 disabled 속성 input 데이터 전송 방법](https://mmozzi.tistory.com/20)

<br>

## 4.
